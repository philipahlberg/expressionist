{"version":3,"file":"index.min.js","sources":["../src/index.ts"],"sourcesContent":["const MATCH_ALL = '[^/]*';\r\n\r\nconst CATCH_ALL = '([^/]+)';\r\n\r\n// matches ':param' and captures 'param'\r\nconst PARAMETER_PATTERN = /:([^\\/]+)/;\r\n\r\n// optional trailing slash\r\n// only matches the slash if nothing follows\r\nconst MATCH_TRAILING_SLASH = '(?:[\\/]?(?=$))?';\r\n\r\n// implements '**' as a wildcard\r\nconst WILDCARD_PATTERN = /\\*\\*/g;\r\n\r\ninterface Compiled {\r\n  pattern: RegExp;\r\n  keys: string[];\r\n}\r\n\r\nexport function compile (path: string, exact: boolean = false): Compiled {\r\n  path = (path.split('#')[0] || '').split('?')[0];\r\n  path = path.replace(WILDCARD_PATTERN, MATCH_ALL);\r\n  let keys: string[] = [];\r\n\r\n  // convert :param to a catch-all group\r\n  // and save the keys\r\n  while (PARAMETER_PATTERN.test(path)) {\r\n    const match = PARAMETER_PATTERN.exec(path);\r\n    // match[0] is the entire declaration, e. g. ':param'\r\n    path = path.replace(match![0], CATCH_ALL);\r\n    // match[1] is the name of the parameter, e. g. 'param'\r\n    keys.push(match![1]);\r\n  }\r\n\r\n  if (!/\\/?/.test(path)) {\r\n    path += MATCH_TRAILING_SLASH;\r\n  }\r\n\r\n  path = '^' + path;\r\n  if (exact) {\r\n    path += '$';\r\n  }\r\n\r\n  const pattern = new RegExp(path, 'i');\r\n  return {\r\n    pattern,\r\n    keys\r\n  }\r\n}\r\n\r\ninterface Parameters {\r\n  [key: string]: string;\r\n}\r\n\r\nexport function execute (compiled: Compiled, path: string): Parameters {\r\n  const pattern = compiled.pattern;\r\n  const keys = compiled.keys;\r\n  const values = (pattern.exec(path) || []).slice(1);\r\n  return keys.reduce((acc, key, i) => {\r\n    acc[key] = values[i];\r\n    return acc;\r\n  }, {});\r\n}"],"names":["MATCH_ALL","CATCH_ALL","PARAMETER_PATTERN","MATCH_TRAILING_SLASH","WILDCARD_PATTERN","path","exact","split","replace","keys","test","match","exec","push","pattern","RegExp","compiled","values","slice","reduce","acc","key","i"],"mappings":"AAAA,MAAMA,UAAY,QAEZC,UAAY,UAGZC,kBAAoB,YAIpBC,qBAAuB,iBAGvBC,iBAAmB,QAOzB,iBAAyBC,EAAcC,GAAiB,GAEtDD,GADAA,GAAQA,EAAKE,MAAM,KAAK,IAAM,IAAIA,MAAM,KAAK,IACjCC,QAAQJ,iBAAkBJ,WACtC,IAAIS,KAIJ,KAAOP,kBAAkBQ,KAAKL,IAAO,CACnC,MAAMM,EAAQT,kBAAkBU,KAAKP,GAErCA,EAAOA,EAAKG,QAAQG,EAAO,GAAIV,WAE/BQ,EAAKI,KAAKF,EAAO,IAanB,MAVK,MAAMD,KAAKL,KACdA,GAAQF,sBAGVE,EAAO,IAAMA,EACTC,IACFD,GAAQ,MAKRS,QAFc,IAAIC,OAAOV,EAAM,KAG/BI,KAAAA,GAQJ,iBAAyBO,EAAoBX,GAC3C,MAAMS,EAAUE,EAASF,QACnBL,EAAOO,EAASP,KAChBQ,GAAUH,EAAQF,KAAKP,QAAaa,MAAM,GAChD,OAAOT,EAAKU,OAAO,CAACC,EAAKC,EAAKC,KAC5BF,EAAIC,GAAOJ,EAAOK,GACXF"}